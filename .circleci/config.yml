# Java Gradle CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.1/language-java/ for more details
#
version: 2.1
executors:
  exevault:
    docker:
      - image: vault:latest
    environment:
      VAULT_TOKEN: 00000000-0000-0000-0000-000000000000
      VAULT_ADDR: http://127.0.0.1:8200
    steps:
      - run:
          name: Spawn Vault Docker Instance & Sleep (Wait for the Vault Instance to become available)
          command: |
            vault server --dev --dev-root-token-id=00000000-0000-0000-0000-000000000000 & sleep 5

      - run:
          name: Inject Secrets into the Vault
          command: |
            vault kv put secret/party-identity/dev admin.username=admin-user admin.password=Mut4nt-Squ@ serv.username=service-user serv.password=Imm0Rt4L~P@ss spring.datasource.username=dev-db spring.datasource.password=S3cret\*\*DB
            vault kv put secret/party-identity/live admin.username=admin-live admin.password=Mut4nt-l1ve-Squ@ serv.username=service-live serv.password=Imm0Rt4L~L1v3~P@ss spring.datasource.username=dev-db spring.datasource.password=l1v3_S3cret\*\*DB

jobs:
  build:
    executor: exevault
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: sh gradlew clean dependencies --refresh-dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run Assemble!
      - run: sh gradlew assemble

  test:
    executor: exevault
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk
      - image: vault:latest

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      VAULT_TOKEN: 00000000-0000-0000-0000-000000000000
      VAULT_ADDR: http://127.0.0.1:8200
    steps:
      - checkout
      - run:
          name: Create Test-Results Directory
          command: |
            mkdir ~/repo/test-results

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      #      - run:
      #          name: Refresh Dependencies
      #          command: |
      #            sh gradlew dependencies --refresh-dependencies
      - run:
          name: launch Vault Server Spawn Vault Docker Instance & Sleep (Wait for the Vault Instance to become available)
          command: |
            vault server --dev --dev-root-token-id=00000000-0000-0000-0000-000000000000 & sleep 5

      - run:
          name: Inject Secrets into the Vault
          command: |
            vault kv put secret/party-identity/dev admin.username=admin-user admin.password=Mut4nt-Squ@ serv.username=service-user serv.password=Imm0Rt4L~P@ss spring.datasource.username=dev-db spring.datasource.password=S3cret\*\*DB
            vault kv put secret/party-identity/live admin.username=admin-live admin.password=Mut4nt-l1ve-Squ@ serv.username=service-live serv.password=Imm0Rt4L~L1v3~P@ss spring.datasource.username=dev-db spring.datasource.password=l1v3_S3cret\*\*DB

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      # sh gradlew --help
      # -P, --project-prop                 Set project property for the build script (e.g. -Pmyprop=myvalue).
      # -D, --system-prop                  Set system property of the JVM (e.g. -Dmyprop=myvalue).
      - run:
          name: Inject Secrets into the Vault
          command: |
            sh gradlew test --debug --system-prop VAULT_TOKEN=${VAULT_TOKEN} --system-prop VAULT_ADDR=${VAULT_ADDR}

      - store_test_results:
          path: ~/repo/test-results

  code_quality:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - run:
          name: "echo an env var that is part of our context"
          command: |
            echo $SONAR_LOGIN

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # run tests!
      - run: sh gradlew --refresh-dependencies dependencies test

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # Code Quality Metrics (Sonarqube) >> Code Quality Metrics (Sonarqube)
      - run: sh gradlew sonarqube

workflows:
  version: 2
  main:
    jobs:
      - build:
          context:
            - Spring-Swagger
            - Security
          filters:
            branches:
              only:
                - master
      - test:
          context:
            - Spring-Swagger
            - Security
          requires:
            - build
      - code_quality:
          context:
            - Spring-Swagger
            - Security
          requires:
            - test